name: Publish to PyPI
permissions:
  contents: write
on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的 git 历史以便切换分支

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set version from tag
        run: |
          # 更新 launcher_core/__init__.py 中的 __version__
          sed -i "s/__version__ = \".*\"/__version__ = \"${{ github.ref_name }}\"/" launcher_core/__init__.py

      - name: Commit version update to main
        if: github.ref == 'refs/heads/main' || github.event_name == 'release'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add launcher_core/__init__.py
          git commit -m "chore: update __version__ to ${{ github.ref_name }}" || echo "No changes to commit"
          git push origin HEAD:main

      - name: Update version in dev branch
        if: github.event_name == 'release'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # 切换到 dev 分支
          git fetch origin dev:dev
          git checkout dev

          # 应用相同的版本更新
          sed -i "s/__version__ = \".*\"/__version__ = \"${{ github.ref_name }}\"/" launcher_core/__init__.py

          # 提交并推送到 dev 分支
          git add launcher_core/__init__.py
          git commit -m "chore: update __version__ to ${{ github.ref_name }}" || echo "No changes to commit"
          git push origin dev

      - name: Install uv
        run: python -m pip install uv

      - name: Build application
        run: uv build

      - name: Publish to PyPI
        run: uv publish --token ${{ secrets.PYPI_API_TOKEN }}
