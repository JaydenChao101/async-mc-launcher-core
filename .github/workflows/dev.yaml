name: Sync Main to Dev

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git config --local advice.diverging false

      - name: Fetch all branches
        run: git fetch --all

      - name: Check if dev branch exists
        id: check_dev
        run: |
          if git show-ref --verify --quiet refs/remotes/origin/dev; then
            echo "dev_exists=true" >> $GITHUB_OUTPUT
          else
            echo "dev_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create dev branch if it doesn't exist
        if: steps.check_dev.outputs.dev_exists == 'false'
        run: |
          git checkout -b dev
          git push origin dev
          echo "Created new dev branch"

      - name: Sync changes to dev branch
        if: steps.check_dev.outputs.dev_exists == 'true'
        run: |
          # Switch to dev branch
          git checkout dev
          
          # Check if dev is already up to date with main
          MAIN_COMMIT=$(git rev-parse origin/main)
          DEV_COMMIT=$(git rev-parse HEAD)
          
          if [ "$MAIN_COMMIT" = "$DEV_COMMIT" ]; then
            echo "Dev branch is already up to date with main"
            exit 0
          fi
          
          # Try to fast-forward merge main into dev
          echo "Attempting to fast-forward merge main into dev..."
          if git merge --ff-only origin/main; then
            echo "Successfully fast-forwarded dev branch to match main"
          else
            echo "Fast-forward not possible, performing regular merge..."
            # If fast-forward fails, do a regular merge to incorporate main changes
            if git merge origin/main -m "Sync dev branch with main"; then
              echo "Successfully merged main into dev branch"
            else
              echo "❌ Merge conflicts detected. Manual intervention required."
              echo "Please resolve conflicts manually and merge main into dev."
              exit 1
            fi
          fi
          
          # Push changes using regular push (no force needed)
          git push origin dev
          
          echo "Successfully synced dev branch with main"

      - name: Verify sync
        run: |
          git checkout dev
          MAIN_COMMIT=$(git rev-parse origin/main)
          DEV_COMMIT=$(git rev-parse HEAD)
          
          if [ "$MAIN_COMMIT" = "$DEV_COMMIT" ]; then
            echo "✅ Dev branch is identical to main (fast-forward sync)"
          else
            # Check if main is an ancestor of dev (meaning main changes are included)
            if git merge-base --is-ancestor origin/main HEAD; then
              echo "✅ Dev branch includes all changes from main (merge sync)"
            else
              echo "❌ Sync failed - main changes are not included in dev"
              exit 1
            fi
          fi
