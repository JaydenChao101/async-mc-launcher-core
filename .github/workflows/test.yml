# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]  # 測試所有支援的版本

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        # 安裝專案及其依賴項
        uv pip install -e . --system
        # 直接安裝開發依賴（避免語法問題）
        uv pip install ruff pytest pytest-cov pytest-asyncio pytest-mock --system
        # 為 Python 3.10 額外安裝 tomli（如果需要）
        if python -c "import sys; exit(0 if sys.version_info >= (3, 11) else 1)" 2>/dev/null; then
          echo "Python 3.11+ detected, using built-in tomllib"
        else
          echo "Python 3.10 detected, installing tomli"
          uv pip install tomli --system
        fi

    - name: Lint with ruff
      run: |
        # 檢查語法錯誤和未定義的名稱
        ruff check launcher_core --select=E9,F63,F7,F82 --output-format=github
        # 執行完整的 lint 檢查
        ruff check launcher_core --output-format=github

    - name: Check formatting with ruff
      run: |
        ruff format --check launcher_core

    - name: Type check with mypy (if enabled)
      run: |
        # 可選：如果您想要類型檢查
        # uv pip install mypy --system
        # mypy launcher_core

    - name: Run tests with pytest
      run: |
        pytest tests/ -v --tb=short --cov=launcher_core --cov-report=xml --cov-report=term-missing

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
